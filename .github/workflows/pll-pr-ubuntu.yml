name: Java CI with Maven in Linux
on:
  push: 
  pull_request: 
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      workdir: ToDoApplicationMultiDB
    strategy:
      matrix:
        include:
        - java: 11
          additional-maven-args:
            -Pcoveralls sonar:sonar
            -DrepoToken=$COVERALLS_REPO_TOKEN 
            -DpullRequest=${{ github.event.pull_request.number }} 
            coveralls:report
            -Dsonar.organization=bernabeipietro
            -Dsonar.host.url=https://sonarcloud.io
            
    name: Build with Java ${{ matrix.java }} on Linux
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml','**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven and SonarCloud
      run: 
        xvfb-run mvn verify ${{ matrix.additional-maven-args }}
      working-directory: ${{env.workdir}}
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Generate JUnit Report
      run: 
        mvn surefire-report:report-only site:site -DgenerateReports=false #create reports as for test
      working-directory: ${{env.workdir}}
      if: ${{failure()}}
    - name: Archive Junit Report
      uses: actions/upload-artifact@v2
      if: ${{failure()}}
      with:
        name: surefire-report-jdk-${{ matrix.java}}
        path: '**/target/site'